/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'jacoco'
mainClassName = "is.ru.tictactoe.TicTacToe"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceSets {
  selenium
}

dependencies {

    compile 'com.sparkjava:spark-core:2.6.0'
    compile "org.slf4j:slf4j-simple:1.7.9";
    build.mustRunAfter clean
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:22.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    seleniumCompile 'junit:junit:4.12'
    seleniumCompile 'org.seleniumhq.selenium:selenium-java:3.6.0'

}

task stage {
    dependsOn  installDist
}

jacocoTestReport {
      reports {
	    xml.enabled false
	    csv.enabled false
      }
}
test.finalizedBy(jacocoTestReport)

task selenium(type: Test, dependsOn: installDist) {
  testClassesDir = sourceSets.selenium.output.classesDir
  classpath = sourceSets.selenium.runtimeClasspath

  ant.condition(property: "os", value: "windows") { os(family: "windows") }
  ant.condition(property: "os", value: "unix"   ) { os(family: "unix")    }
  
  doFirst {
          switch(ant.properties.os) {
              case 'unix':
                  'build/install/TicTacToe/bin/TicTacToe &'.execute()
                  break
              case 'windows':
                  'build/install/TicTacToe/bin/TicTacToe.bat'.execute()
                  break
          }
      }
}